---
# swift_node
#   A node of Swift that has a key'storage'.
# swift_node.storage.swift
#   Storages of Swift

- name: "Check whether the key \"swift_node.storage\" is existed"
  ansible.builtin.fail:
    msg: "A parameter \"swift_node\" must have a key \"storage\"."
  when: not 'storage' in swift_node

- name: "Check whether the key \"swift_node.storage.swift\" is existed"
  ansible.builtin.fail:
    msg: "A parameter \"swift_node\" must have a key \"storage.swift\"."
  when: not 'swift' in swift_node.storage

- name: "Include a function adding {{ type_of_builder }} of ring-device for Swift"
  include_role:
    name: functions
    tasks_from: add_swift_ring/main.yml
  vars:
    builder: "{{ type_of_builder }}"
    ip_of_storage_node: "{{ swift_node.management.ip }}"
  loop_control:
    loop_var: name_of_device
  with_items: "{{ swift_node.storage.swift }}"

# Print?
- name: A block to hook ring builder
  block:

  - name: "Get output of Swift ring-builder"
    ansible.builtin.command:
      cmd: swift-ring-builder {{ type_of_builder }}
    args:
      chdir: /etc/swift
    register: result_of_swift_ring_command
    failed_when: not result_of_swift_ring_command.rc == 0

  - name: "Print output of Swift ring-builder"
    ansible.builtin.debug:
      msg: "{{ result_of_swift_ring_command.stdout.split('\n') }}"

  - name: "Rebalance Swift ring builder for the builder \"{{ type_of_builder }}\""
    ansible.builtin.command:
      cmd: swift-ring-builder {{ type_of_builder }} rebalance
    failed_when: not result_of_swift_ring_command.rc == 0
  when: "'controllers' in group_names"
