---
- name: Set a flag to install placement package from PyPI or package manager
  ansible.builtin.set_fact:
    flag_install_from_pypi: ('use_pypi' in group_vars.placement) and group_vars.placement.use_pypi

- name: Debug flag_install_from_pypi
  ansible.builtin.debug:
    msg: "flag_install_from_pypi => {{ flag_install_from_pypi }}"

- name: A block of installing placement-api from package manager
  block:
    - name: Install placment packages from package manager
      apt:
        name:
          - python3-pip
          - placement-api
       register: apt_result
       retries: 360
       delay: 5
       until: apt_result is success
  when: flag_install_from_pypi == False

- name: A block of installing placement-api from PyPI
  block:
    - name: Install python3-pip
      apt:
        name:
          - python3-pip
       register: apt_result
       retries: 360
       delay: 5
       until: apt_result is success

    - name: Install placement packages from PyPI
      pip:
        name:
          - openstack-placement
          - pymysql
          - uwsgi
  when: flag_install_from_pypi == True

- name: Group placement should be existed
  ansible.builtin.group:
    name: placement
    state: present

- name: User placement should be existed
  ansible.builtin.user:
    name: placement
    shell: /bin/false
    group: placement
    home: /var/lib/placement
    create_home: no
    comment: "User for OpenStack Placement"

- name: Create a directory /etc/placement for Placement
  ansible.builtin.file:
    path: /etc/placement
    state: directory
    owner: root
    group: placement
    mode: '0750'

- name: Set /etc/placement/placement.conf
  ansible.builtin.template:
    src: placement/PyPI/placement.conf.j2
    dest: /etc/placement/placement.conf
    owner: root
    group: placement
    mode: '0640'
    backup: yes
  notify:
    - Restart apache2

- name: Check a flag that means set config and sync db was finished
  stat:
    path: /root/.ansible_placement_sync_db_was_finished
  register: flag_file

- name: Sync database for placement
  ansible.builtin.command:
    argv: ["su", "-s", "/bin/sh", "-c", "placement-manage db sync", "placement"]
  when: not flag_file.stat.exists

- name: Create a flag that means sync db was finished
  copy:
    content: ""
    dest: /root/.ansible_placement_sync_db_was_finished
    force: no
    owner: root
    group: root
    mode: '0640'

- name: Run notified handler of apache2
  meta: flush_handlers
