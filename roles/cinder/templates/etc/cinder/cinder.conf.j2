[DEFAULT]
rootwrap_config = /etc/cinder/rootwrap.conf
api_paste_confg = /etc/cinder/api-paste.ini
iscsi_helper = lioadm
volume_name_template = volume-%s
volume_group = cinder-volumes
verbose = True
auth_strategy = keystone
state_path = /var/lib/cinder
lock_path = /var/lock/cinder
volumes_dir = /var/lib/cinder/volumes
{# Supported "lvm" or "ceph" currently. And it must be declaread as a parameter group_vars.cinder.enabled_backends. Otherwise it will throw an error when Cinder has started. -#}
enabled_backends = {{ group_vars.cinder.enabled_backends }}

{% if group_vars.cinder.enabled_backends == "ceph" -%}
# You have to set "glance_api_version = 2" if you enable multiple_cinder_back_ends
glance_api_version = 2
{%- endif %}

transport_url = rabbit://{{ group_vars.mq.user }}:{{ group_vars.mq.password }}@{{ group_vars.hosts.controllers[0].names[0] }}:5672/
auth_strategy = keystone
{% if 'controllers' in group_names %}
my_ip = {{ (group_vars.hosts.controllers|selectattr('names', 'contains', inventory_hostname)|first).management.ip }}
{% elif 'cinders' in group_names %}
my_ip = {{ (group_vars.hosts.cinders|selectattr('names', 'contains', inventory_hostname)|first).management.ip }}
{% endif %}

{% if 'cinders' in group_names %}
glance_api_servers = http://{{ group_vars.hosts.controllers[0].names[0] }}:9292

backup_driver = cinder.backup.drivers.swift.SwiftBackupDriver
backup_swift_url = {{ backup_swift_url }}
{% endif %}

[database]
connection = mysql+pymysql://{{ group_vars.cinder.user }}:{{ group_vars.cinder.password }}@{{ group_vars.hosts.controllers[0].names[0] }}/cinder

[keystone_authtoken]
www_authenticate_uri = http://{{ group_vars.hosts.controllers[0].names[0] }}:5000
auth_url = http://{{ group_vars.hosts.controllers[0].names[0] }}:5000
memcached_servers = {{ group_vars.hosts.controllers[0].names[0] }}:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = {% for domain in group_vars.openstack.domains if domain.name.upper() == 'DEFAULT' -%}
  {% for project in domain.projects if 'primary' in project and project.primary == true -%}
    {{ project.name }}{{ '\n' }}
  {%- endfor %}
{%- endfor %}
username = {{ group_vars.cinder.user }}
password = {{ group_vars.cinder.password }}

{% if 'controllers' in group_names and group_vars.cinder.enabled_backends == "lvm" %}
[lvm]
volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
volume_group = cinder-volumes
target_protocol = iscsi
target_helper = tgtadm
{% endif %}

[oslo_concurrency]
lock_path = /var/lib/cinder/tmp

{% if group_vars.cinder.enabled_backends == "ceph" -%}
[ceph]
volume_driver = cinder.volume.drivers.rbd.RBDDriver

# Specify a name of cluster and location of a config file of it. If you want to specify a name of cluster other than "ceph", you have to specify a name of cluster and change the location of it.
##rbd_cluster_name = jp-east
##rbd_ceph_conf = /etc/ceph/jp-east.conf

# Set a name of pool as "rbd". If you want to specify it to store data, you should specify like "rbd_pool".
rbd_pool = volumes

# Specify user-name and password
rbd_user = cinder
rbd_secret_uuid = 3753f63d-338b-4f3d-b54e-a9117e7d9990

rbd_flatten_volume_from_snapshot = false
rbd_max_clone_depth = 5
rbd_store_chunk_size = 4
rados_connect_timeout = -1

# Specify a driver ceph for backup_driver
backup_driver = cinder.backup.drivers.ceph
# Specify a location of file of backup_ceph_conf. You can specify it another file of ceph.
# You can specify another name of cluster by specifying another configuration for example.
backup_ceph_conf = /etc/ceph/ceph.conf
# A pool for backup_ceph
backup_ceph_pool = backups
backup_ceph_user = cinder-backup
# Specify configurations below additionally.
backup_ceph_chunk_size = 134217728
backup_ceph_stripe_unit = 0
backup_ceph_stripe_count = 0
restore_discard_excess_bytes = true
{%- endif %}
