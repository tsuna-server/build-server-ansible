---
- name: "Push the file to any Swift nodes from the Ansible"
  copy:
    src: ".buffer/.cinder_backup_swift_url"
    dest: "/root/.cinder_backup_swift_url"

- name: "Get backup Swift URL to configure Cinder nodes"
  ansible.builtin.command: cat /root/.cinder_backup_swift_url
  register: result_cinder_backup_swift_url

- name: "Declare backup_swift_url to configure Cinder nodes"
  set_fact:
    backup_swift_url: "{{ result_cinder_backup_swift_url.stdout_lines[-1] }}"

- name: "Configure /etc/cinder/cinder.conf of Cinder for Controller node"
  ansible.builtin.template:
    src: "etc/cinder/cinder.conf.j2"
    dest: /etc/cinder/cinder.conf
    owner: root
    group: cinder
    mode: 0640
  notify:
    - Restart tgt
    - Restart cinder-volume

# Setting cinder.conf for tgt
- name: Get stats of /etc/tgt/conf.d/cinder.conf
  ansible.builtin.stat:
    path: /etc/tgt/conf.d/cinder.conf
  register: result_of_stat_of_cinder_conf

- name: Block of creating /etc/tgt/conf.d/cinder.conf
  block:
    - name: Create /etc/tgt/conf.d/cinder.conf
      copy:
        dest: "/etc/tgt/conf.d/cinder.conf"
        content: "include /var/lib/cinder/volumes/*"

    - name: Restart tgt after /etc/tgt/conf.d/cinder.conf was configured
      ansible.builtin.systemd:
        state: restarted
        name: tgt.service
  when: not result_of_stat_of_cinder_conf.stat.exists
