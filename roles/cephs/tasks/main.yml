---
#- name: Create a ssh_key on a master node of Ceph if it has not existed
#  openssh_keypair:
#    path: "{{ ansible_env.HOME }}/.ssh/ceph"
#  when: "inventory_hostname == group_vars.ceph.monitor.hosts.master"

#- name: Debug for cephs
#  ansible.builtin.debug:
#    msg: "{{ item }}"
#  with_items:
#    "group_vars.hosts['cephs']"
#  when: "'cephs' in group_vars.hosts"

- name: "Include \"install_packages/monitors/main.yml\" if a current host is a monitor of Ceph. // Conditionals -> \"inventory_hostname({{ inventory_hostname }}) == group_vars.ceph.monitor.hosts.master({{ group_vars.ceph.monitor.hosts.master }})\""
  include_tasks: install_packages/monitors/main.yml
  when: inventory_hostname == group_vars.ceph.monitor.hosts.master

- name: "Include \"install_packages/nodes/main.yml\" if a current host is a monitor of Ceph. // conditionals -> \"inventory_hostname({{ inventory_hostname }}) != group_vars.ceph.monitor.hosts.master({{ group_vars.ceph.monitor.hosts.master }})\""
  include_tasks: install_packages/nodes/main.yml
  when: inventory_hostname != group_vars.ceph.monitor.hosts.master


- name: Block for monitor node for Ceph cluster
  block:

  - name: "Include create_ceph_conf/monitors/main.yml for monitor node of Ceph"
    include_tasks: create_ceph_conf/monitors/main.yml

  - name: "Include create_keyrings/monitors/main.yml for monitor node of Ceph"
    include_tasks: create_keyrings/monitors/main.yml

  - name: "Include create_monitors/monitors/main.yml for monitor node of Ceph"
    include_tasks: create_monitors/monitors/main.yml


  - name: "Change permissions of directories recursively on a host {{ group_vars.ceph.monitor.hosts.master }} for Ceph"
    ansible.builtin.file: 
      path: "{{ item }}"
      state: directory
      recurse: yes
      owner: ceph
      group: ceph
    with_items:
      - "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"
      - "/var/lib/ceph/bootstrap-osd"

  - name: "Enable \"ceph-mon@{{ group_vars.ceph.monitor.hosts.master }}\" on a host \"{{ group_vars.ceph.monitor.hosts.master }}\""
    ansible.builtin.systemd:
      name: "ceph-mon@{{ group_vars.ceph.monitor.hosts.master }}"
      state: restarted
      enabled: true

  - name: "Get version of Ceph manager protocol"
    ansible.builtin.shell: ceph mon stat -f json | jq '.epoch'
    register: result_of_command

  - name: "Declare a variable version_of_ceph_manager_protocol"
    set_fact:
      version_of_ceph_manager_protocol: "{{ result_of_command.stdout_lines[-1] }}"

  - name: "Check whether getting version of Ceph manager has succeeded. (not version_of_ceph_manager_protocol({{ version_of_ceph_manager_protocol }}) | regex_search(\"^[0-9]+$\"))"
    ansible.builtin.fail:
      msg: "Failed to get version of Ceph protocol. A resultt of \"ceph mon stat -f json | jq '.epoch'\" is not a number. An actual result is \"version_of_ceph_manager_protocol={{ version_of_ceph_manager_protocol }}\""
    when: not version_of_ceph_manager_protocol | regex_search("^[0-9]+$")

  # We have to validate version_of_ceph_manager_protocol as a string not as a integer. https://stackoverflow.com/a/69109779
  - name: "Enabling manager v2 protocol for Ceph if current version of it was version \"1\". Current version is \"{{ version_of_ceph_manager_protocol }}\""
    ansible.builtin.command: ceph mon enable-msgr2
    when: version_of_ceph_manager_protocol == "1"

  - name: "Get current status of \"auth_allow_insecure_global_id_reclaim\""
    ansible.builtin.shell: ceph config get mon -f json | jq -r .auth_allow_insecure_global_id_reclaim.value
    register: result_of_ceph_config_get

  - name: "Set a parameter auth_allow_insecure_global_id_reclaim=false for Ceph if it has not false. (current auth_allow_insecure_global_id_reclaim={{ result_of_ceph_config_get.stdout_lines[-1] }})"
    ansible.builtin.command: ceph config set mon auth_allow_insecure_global_id_reclaim false
    when: result_of_ceph_config_get.stdout_lines[-1] != "false"


  # To detect pg_autoscaler is enabled or not, check elements in either always_on_modules[] or enabled_modules[]
  - name: "Get current status of pg_autosclaer has already enabled or not on Ceph"
    ansible.builtin.shell: ceph mgr module ls -f json | jq -r '.always_on_modules[], .enabled_modules[] | select(contains("pg_autoscaler"))'
    register: result_of_ceph_mgr_mocule_ls

  - name: "Enable auto scale module for Ceph if it has not enabled ({{ result_of_ceph_mgr_mocule_ls.stdout_lines[-1] == \"pg_autoscaler\" }})"
    ansible.builtin.command: ceph mgr module enable pg_autoscaler
    when: result_of_ceph_mgr_mocule_ls.stdout_lines[-1] != "pg_autoscaler"


  - name: "Creating a directory \"/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}\" for a daemon of Ceph monitor"
    ansible.builtin.file:
      path: "/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}"
      state: directory
      mode: '0755'


  - name: "Get or create mgr auth-key for mgr.{{ inventory_hostname }}"
    ansible.builtin.command: ceph auth get-or-create mgr.{{ inventory_hostname }} mon 'allow profile mgr' osd 'allow *' mds 'allow *'
    register: result_of_the_command

  - name: "Declare a result of the command \"ceph auth get-or-create mgr.{{ inventory_hostname }} mon\""
    set_fact:
      #auth_key_for_mgr_host: "{{ result_of_the_command.stdout_lines[-1] }}"
      auth_key_for_mgr_host: "{{ result_of_the_command.stdout }}"

  - name: "Create a file \"/etc/ceph/ceph.mgr.admin.keyring\" for Ceph manager"
    copy:
      dest: "/etc/ceph/ceph.mgr.admin.keyring"
      content: "{{ auth_key_for_mgr_host }}{{ '\n' }}"

  - name: "Copy a file \"/etc/ceph/ceph.mgr.admin.keyring\" to \"/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}/keyring\""
    copy:
      src: "/etc/ceph/ceph.mgr.admin.keyring"
      dest: "/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}/keyring"
      remote_src: yes
      owner: ceph
      group: ceph


  - name: "Set permissions any files and directories under \"/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}\""
    ansible.builtin.command: chown -R ceph. /var/lib/ceph/mgr/ceph-{{ inventory_hostname }}


  - name: "Enable \"ceph-mgr@{{ inventory_hostname }}\" on a host \"{{ inventory_hostname }}\""
    ansible.builtin.systemd:
      name: "ceph-mgr@{{ inventory_hostname }}"
      state: restarted
      enabled: true


  - name: "Run a command \"ceph osd lspools\" to list Ceph pools"
    ansible.builtin.command: ceph osd lspools
    register: result_of_command

  - name: "Print a result of \"ceph osd lspools\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph -s\" to show Ceph status"
    ansible.builtin.command: ceph -s
    register: result_of_command

  - name: "Print a result of \"ceph -s\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph osd tree\" to show OSD tree"
    ansible.builtin.command: ceph osd tree
    register: result_of_command

  - name: "Print a result of \"ceph osd tree\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph df\" to show Ceph device space usage"
    ansible.builtin.command: ceph df
    register: result_of_command

  - name: "Print a result of \"ceph df\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph osd df\" to show OSD device space usage"
    ansible.builtin.command: ceph osd df
    register: result_of_command

  - name: "Print a result of \"ceph osd df\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  when: inventory_hostname == group_vars.ceph.monitor.hosts.master

