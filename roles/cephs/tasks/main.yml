---
#- name: Create a ssh_key on a master node of Ceph if it has not existed
#  openssh_keypair:
#    path: "{{ ansible_env.HOME }}/.ssh/ceph"
#  when: "inventory_hostname == group_vars.ceph.monitor.hosts.master"

#- name: Debug for cephs
#  ansible.builtin.debug:
#    msg: "{{ item }}"
#  with_items:
#    "group_vars.hosts['cephs']"
#  when: "'cephs' in group_vars.hosts"

- name: "Include \"install_packages/monitors/main.yml\" if a current host is a monitor of Ceph. // Conditionals -> \"inventory_hostname({{ inventory_hostname }}) == group_vars.ceph.monitor.hosts.master({{ group_vars.ceph.monitor.hosts.master }})\""
  include_tasks: install_packages/monitors/main.yml
  when: inventory_hostname == group_vars.ceph.monitor.hosts.master

- name: "Include \"install_packages/nodes/main.yml\" if a current host is a monitor of Ceph. // conditionals -> \"inventory_hostname({{ inventory_hostname }}) != group_vars.ceph.monitor.hosts.master({{ group_vars.ceph.monitor.hosts.master }})\""
  include_tasks: install_packages/nodes/main.yml
  when: inventory_hostname != group_vars.ceph.monitor.hosts.master


- name: Block for monitor node for Ceph cluster
  block:

  - name: Register a variable file_ceph_cluster_uuid_stat to check a file .uuid_for_ceph_cluster has alreadu existed
    stat:
      path: "{{ ansible_env.HOME }}/.uuid_for_ceph_cluster"
      get_checksum: false
      get_md5: false
    register: file_ceph_uuid_stat

  - name: Create uuid for ceph cluster
    copy:
      dest: "{{ ansible_env.HOME }}/.uuid_for_ceph_cluster"
      content: "{{ 9999999999999999999999 | random | to_uuid }}"
    when: file_ceph_uuid_stat.stat.exists == False

  - name: "Fetch the file \"{{ ansible_env.HOME }}/.uuid_for_ceph_cluster\" from the  to push any swift nodes"
    run_once: yes
    fetch:
      src: "{{ ansible_env.HOME }}/.uuid_for_ceph_cluster"
      dest: .buffer/.uuid_for_ceph_cluster
      flat: yes

  - name: "Declare a variable to push UUID for Ceph cluster"
    set_fact:
      uuid_for_ceph_cluster: "{{ lookup('file', \".buffer/.uuid_for_ceph_cluster\") }}"

  - name: "Checking whether getting UUID for Ceph cluster has succeeded"
    ansible.builtin.fail:
      msg: "Failed getting UUID from a file \"{{ ansible_env.HOME }}/.uuid_for_ceph_cluster\" from the host \"{{ group_vars.ceph.monitor.hosts.master }}\". Result of value of the variable is \"{{ uuid_for_ceph_cluster }}\""
    when: not uuid_for_ceph_cluster | regex_search("^[0-9a-f]{8}\-[0-9a-f]{4}\-[0-9a-f]{4}\-[0-9a-f]{4}\-[0-9a-f]{12}$")

  - name: "Print for a variable uuid_for_ceph_cluster"
    ansible.builtin.debug:
      msg: "uuid_for_ceph_cluster={{ uuid_for_ceph_cluster }}"

  - name: "Declare a list of host to modify \"/etc/ceph/ceph.conf\" if current host \"{{ inventory_hostname }}\" is in \"group_vars.hosts.cinders\""
    set_fact:
      my_ip: "{% if 'cinders' in group_vars.hosts %}{% set tmp_hosts = group_vars.hosts.cinders %}{% elif 'storages' in group_vars.hosts %}{% set tmp_hosts = group_vars.hosts.storages %}{% endif -%}
              {% if tmp_hosts is defined -%}
                {% for item in tmp_hosts -%}
                  {% if item.name == group_vars.ceph.monitor.hosts.master -%}{{ item.management.ip }}{% endif -%}
                {% endfor -%}
              {% endif %}"

  - name: "Print a variable \"my_ip\" if a current host \"{{ inventory_hostname }}\" is a monitor of Ceph cluster"
    ansible.builtin.debug:
      msg: "my_ip={{ my_ip }}"

  - name: "Failed if a variable \"my_ip\" has not defined in a monitor node of Ceph \"{{ inventory_hostname }}\""
    ansible.builtin.fail:
      msg: "Failed! A variable \"my_ip\" has not defined in a monitor node of Ceph \"{{ inventory_hostname }}\". Does a host \"{{ inventory_hostname }}\" existed in \"group_vars.hosts.cinders\" or \"group_vars.hosts.storages\"?"
    when: not my_ip | regex_search("^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$")

  - name: "Creating /etc/ceph/ceph.conf only in a host \"{{ group_vars.ceph.monitor.hosts.master }}\""
    ansible.builtin.template:
      src: monitor/etc/ceph/ceph.conf
      dest: /etc/ceph/ceph.conf
      owner: root
      group: root
      mode: '0644'
    #notify:
    #  - Restart rsync

  - name: "Stat \"/etc/ceph/ceph.mon.keyring\" whether the file has already existed"
    stat:
      path: "/etc/ceph/ceph.mon.keyring"
      get_checksum: false
      get_md5: false
    register: flag_file

  - name: "Generating a key for monitoring a Ceph cluster on \"{{ group_vars.ceph.monitor.hosts.master }}\""
    ansible.builtin.command: ceph-authtool --create-keyring /etc/ceph/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'
    when: flag_file.stat.exists == False


  - name: "Stat \"/etc/ceph/ceph.client.admin.keyring\" whether the file has already existed"
    stat:
      path: "/etc/ceph/ceph.client.admin.keyring"
      get_checksum: false
      get_md5: false
    register: flag_file

  - name: "Generating a key for managing a Ceph cluster on \"{{ group_vars.ceph.monitor.hosts.master }}\""
    ansible.builtin.command: ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'
    when: flag_file.stat.exists == False


  - name: "Stat \"/var/lib/ceph/bootstrap-osd/ceph.keyring\" whether the file has already existed"
    stat:
      path: "/var/lib/ceph/bootstrap-osd/ceph.keyring"
      get_checksum: false
      get_md5: false
    register: flag_file

  - name: "Generating a key for bootstraping a Ceph cluster on \"{{ group_vars.ceph.monitor.hosts.master }}\""
    ansible.builtin.command: ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'
    when: flag_file.stat.exists == False


  - name: "Check a flag that means \"ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring\" was finished"
    stat:
      path: /root/.ceph_authtool_ceph_client_admin_keyring_has_finished
    register: flag_file

  - name: "Import a keyring \"client.admin\" from \"/etc/ceph/ceph.client.admin.keyring\" to \"/etc/ceph/ceph.mon.keyring\""
    ansible.builtin.command: ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring
    when: flag_file.stat.exists == False

  - name: "Create a flag that means \"ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring\" was finished"
    copy:
      content: ""
      dest: /root/.ceph_authtool_ceph_client_admin_keyring_has_finished
      force: no
      owner: root
      group: root
      mode: '0640'


  - name: "Check a flag that means \"ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring\" was finished"
    stat:
      path: /root/.ceph_authtool_bootstrap_osd_ceph_keyring_has_finished
    register: flag_file

  - name: "Import a key \"client.bootstrap-osd\" from \"/var/lib/ceph/bootstrap-osd/ceph.keyring\" to \"/etc/ceph/ceph.mon.keyring\"."
    ansible.builtin.command: ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring
    when: flag_file.stat.exists == False

  - name: "Create a flag that means \"ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring\" was finished"
    copy:
      content: ""
      dest: /root/.ceph_authtool_bootstrap_osd_ceph_keyring_has_finished
      force: no
      owner: root
      group: root
      mode: '0640'


  - name: "Register a variable file_monmap to check a file \"/etc/ceph/monmap\" has alreadu existed"
    stat:
      path: "/etc/ceph/monmap"
      get_checksum: false
      get_md5: false
    register: file_ceph_uuid_stat

  - name: "Creating a monitor-map for Ceph cluster on a monitor node \"{{ group_vars.ceph.monitor.hosts.master }}\""
    ansible.builtin.command: monmaptool --create --add {{ inventory_hostname }} {{ my_ip }} --fsid {{ uuid_for_ceph_cluster }} /etc/ceph/monmap
    when: file_ceph_uuid_stat.stat.exists == False

  - name: "Creating a directory \"/var/lib/ceph/mon/ceph-{{ group_vars.ceph.monitor.hosts.master }}\" for a daemon of Ceph monitor"
    ansible.builtin.file:
      path: "/var/lib/ceph/mon/ceph-{{ group_vars.ceph.monitor.hosts.master }}"
      state: directory
      mode: '0755'


  - name: "Register a variable result_pgrep_ceph_mon whether ceph-mon has already running or not"
    ansible.builtin.command: pgrep ceph-mon
    register: result_pgrep_ceph_mon
    failed_when: (result_pgrep_ceph_mon.rc not in [1, 0])

  - name: "Declare a variable of pid of ceph_mon"
    set_fact:
      pid_of_ceph_mon: "{% if result_pgrep_ceph_mon is defined and result_pgrep_ceph_mon.stdout != '' %}{{ result_pgrep_ceph_mon.stdout_lines[-1] }}{% endif %}"

  #- name: "Deeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeebug"
  #  ansible.builtin.debug:
  #    msg: "pid_of_ceph_mon => {{ pid_of_ceph_mon }}"

  - name: "Create a monitor daemon of Ceph"
    ansible.builtin.command: ceph-mon --cluster ceph --mkfs -i {{ group_vars.ceph.monitor.hosts.master }} --monmap /etc/ceph/monmap --keyring /etc/ceph/ceph.mon.keyring
    when: not pid_of_ceph_mon | regex_search("^[0-9]+$")

  #- name: "Change owner \"ceph\" and group \"ceph\" of a file /etc/ceph/ceph.*"
  #  ansible.builtin.command: chown ceph. /etc/ceph/ceph.*

  - name: "Find ceph configurations in the directory \"/etc/ceph/ceph*\" on a monitor node \"{{ group_vars.ceph.monitor.hosts.master }}\" for Ceph"
    find:
      paths: /etc/ceph
      file_type: file
      patterns: "ceph.*"
    register: filelist

  - name: "Change permisions of files \"/etc/ceph/ceph.*\" on a host \"{{ group_vars.ceph.monitor.hosts.master }}\" for Ceph"
    ansible.builtin.file:
      dest: "{{ item.path }}"
      owner: ceph
      group: ceph
    with_items: "{{ filelist.files }}"

  - name: "Change permissions of directories recursively on a host {{ group_vars.ceph.monitor.hosts.master }} for Ceph"
    ansible.builtin.file: 
      path: "{{ item }}"
      state: directory
      recurse: yes
      owner: ceph
      group: ceph
    with_items:
      - "/var/lib/ceph/mon/ceph-{{ inventory_hostname }}"
      - "/var/lib/ceph/bootstrap-osd"

  - name: "Enable \"ceph-mon@{{ group_vars.ceph.monitor.hosts.master }}\" on a host \"{{ group_vars.ceph.monitor.hosts.master }}\""
    ansible.builtin.systemd:
      name: "ceph-mon@{{ group_vars.ceph.monitor.hosts.master }}"
      state: restarted
      enabled: true

  - name: "Get version of Ceph manager protocol"
    ansible.builtin.shell: ceph mon stat -f json | jq '.epoch'
    register: result_of_command

  - name: "Declare a variable version_of_ceph_manager_protocol"
    set_fact:
      version_of_ceph_manager_protocol: "{{ result_of_command.stdout_lines[-1] }}"

  - name: "Check whether getting version of Ceph manager has succeeded. (not version_of_ceph_manager_protocol({{ version_of_ceph_manager_protocol }}) | regex_search(\"^[0-9]+$\"))"
    ansible.builtin.fail:
      msg: "Failed to get version of Ceph protocol. A resultt of \"ceph mon stat -f json | jq '.epoch'\" is not a number. An actual result is \"version_of_ceph_manager_protocol={{ version_of_ceph_manager_protocol }}\""
    when: not version_of_ceph_manager_protocol | regex_search("^[0-9]+$")

  # We have to validate version_of_ceph_manager_protocol as a string not as a integer. https://stackoverflow.com/a/69109779
  - name: "Enabling manager v2 protocol for Ceph if current version of it was version \"1\". Current version is \"{{ version_of_ceph_manager_protocol }}\""
    ansible.builtin.command: ceph mon enable-msgr2
    when: version_of_ceph_manager_protocol == "1"

  # FIXME:
  - name: "Set a parameter auth_allow_insecure_global_id_reclaim=false for Ceph"
    ansible.builtin.command: ceph config set mon auth_allow_insecure_global_id_reclaim false


  - name: "Enable auto scale module for Ceph"
    ansible.builtin.command: ceph mgr module enable pg_autoscaler


  - name: "Creating a directory \"/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}\" for a daemon of Ceph monitor"
    ansible.builtin.file:
      path: "/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}"
      state: directory
      mode: '0755'


  - name: "Get or create mgr auth-key for mgr.{{ inventory_hostname }}"
    ansible.builtin.command: ceph auth get-or-create mgr.{{ inventory_hostname }} mon 'allow profile mgr' osd 'allow *' mds 'allow *'
    register: result_of_the_command

  - name: "Declare a result of the command \"ceph auth get-or-create mgr.{{ inventory_hostname }} mon\""
    set_fact:
      #auth_key_for_mgr_host: "{{ result_of_the_command.stdout_lines[-1] }}"
      auth_key_for_mgr_host: "{{ result_of_the_command.stdout }}"

  - name: "Create a file \"/etc/ceph/ceph.mgr.admin.keyring\" for Ceph manager"
    copy:
      dest: "/etc/ceph/ceph.mgr.admin.keyring"
      content: "{{ auth_key_for_mgr_host }}{{ '\n' }}"

  - name: "Copy a file \"/etc/ceph/ceph.mgr.admin.keyring\" to \"/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}/keyring\""
    copy:
      src: "/etc/ceph/ceph.mgr.admin.keyring"
      dest: "/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}/keyring"
      remote_src: yes
      owner: ceph
      group: ceph


  - name: "Set permissions any files and directories under \"/var/lib/ceph/mgr/ceph-{{ inventory_hostname }}\""
    ansible.builtin.command: chown -R ceph. /var/lib/ceph/mgr/ceph-{{ inventory_hostname }}


  - name: "Enable \"ceph-mgr@{{ inventory_hostname }}\" on a host \"{{ inventory_hostname }}\""
    ansible.builtin.systemd:
      name: "ceph-mgr@{{ inventory_hostname }}"
      state: restarted
      enabled: true


  - name: "Run a command \"ceph osd lspools\" to list Ceph pools"
    ansible.builtin.command: ceph osd lspools
    register: result_of_command

  - name: "Print a result of \"ceph osd lspools\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph -s\" to show Ceph status"
    ansible.builtin.command: ceph -s
    register: result_of_command

  - name: "Print a result of \"ceph -s\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph osd tree\" to show OSD tree"
    ansible.builtin.command: ceph osd tree
    register: result_of_command

  - name: "Print a result of \"ceph osd tree\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph df\" to show Ceph device space usage"
    ansible.builtin.command: ceph df
    register: result_of_command

  - name: "Print a result of \"ceph df\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  - name: "Run a command \"ceph osd df\" to show OSD device space usage"
    ansible.builtin.command: ceph osd df
    register: result_of_command

  - name: "Print a result of \"ceph osd df\""
    ansible.builtin.debug:
      msg: "{{ result_of_command.stdout.split('\n') }}"

  when: inventory_hostname == group_vars.ceph.monitor.hosts.master

