---
# This instruction assumes a variable `tmp_network` was already declared.
#   tmp_network.name:
#     Network name that will be created in this section
#   tmp_network.mtu (optional):
#     Maximum transmission unit(MTU) in the network.
#     1450 will be applied by default if it was not declared.

- name: Determine MTU of the network
  set_fact:
    mtu: "{% if 'mtu' in tmp_network %}{{ tmp_network.mtu }}{% else %}1450{% endif %}"

- name: Re-set MTU of the network to the dictionary
  set_fact:
    network: "{{ tmp_network | combine( {'mtu': mtu} ) }}"

- name: Print a network that will be created in this section
  ansible.builtin.debug:
    msg: "network={{ network }}"

- name: Check the network has already existed or not
  ansible.builtin.script: ./check_duplicate_network.sh "{{ network.name }}"
  register: result_of_checking_network
  failed_when: ( result_of_checking_network.rc not in [0, 1] )

#### # Create a external or internal network
#### - name: Include do_create_external_network.yml
####   include: do_create_external_network.yml
####   when: "'external' in network and network.external == True"
#### 
#### - name: Include do_create_internal_network.yml
####   include: do_create_internal_network.yml
####   when: "'external' not in network or ('external' in network and network.external != False)"

- name: Block of create network
  block:
    # Add an external option if a configuration of the network indicate as external
    - name: Determine the network is indicated whether external or not
      set_fact:
        is_external: "{% if 'external' in network and network.external == True %}True{% else %}False{% endif %}"

    - name: Declare command variable to create new network
      set_fact:
        command: ["openstack", "network", "create", "--provider_network-type", "{{ network.provider.network.type }}", "--mtu", "{{ network.mtu }}"]

    - name: Append options --external and --provider-physical-network to the command if the network is external
      set_fact:
        command: "{{ command + [\"--provider-physical-network\", \"provider\", \"--external\"] }}"
      when: is_external

    - name: Append an options --provider-segment to the command if the network is internal
      set_fact:
        command: "{{ command + [\"--provider-segment\", \"{{ network.provider_segment }}\"] }}"
      when: not is_external

    - name: Append an network name to the command
      set_fact:
        command: "{{ command + [\"{{ network.name }}\"] }}"

    - name: Print a command will be run to create new network
      ansible.builtin.debug:
        msg: "command={{ command }}"

    - name: Create a network
      ansible.builtin.command:
        argv: "{{ command }}"
      register: result_of_creating_network

    - name: Print the result of creating network
      ansible.builtin.debug:
        msg: "{{ result_of_creating_network.stdout.split('\n') }}"
  when: result_of_checking_network.rc == 0
