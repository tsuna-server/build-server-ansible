group_vars:
  hosts:
    # Host names must much with inventory_hostname
    controllers:
      - names: ["dev-controller01", "dev-controller01.openstack.example.com"]
        management:
          ip: 192.168.2.1
          interface: enp2s0
        provider:
          # An interface that is connecting provider network but it does not have any IP.
          # It will be used as OpenStack provider interface.
          interface: enp1s0
    computes:
      - names: ["dev-compute01", "dev-compute01.openstack.example.com"]
        management:
          ip: 192.168.2.11
          interface: enp2s0
        provider:
          interface: enp1s0
      - names: ["dev-compute02", "dev-compute02.openstack.example.com"]
        management:
          ip: 192.168.2.12
          interface: enp2s0
        provider:
          interface: enp1s0
  ntp:
    ip:
      allow: 192.168.2.0/24
      server: dev-controller01

  sql:
    bind_address: 192.168.2.1
    max_connections: 4096
    password: secret

  mq:
    user: openstack
    password: secret

  memcached:
    listen_ip: 192.168.2.1

  etcd:
    initial_cluster_token: etcd-cluster-01

  keystone:
    user: keystone
    group: keystone
    password: secret
    configs:
      keystone_conf:
        token:
          provider: fernet
    auth_url: "http://dev-controller01:5000/v3"
    dbs:
      # DB names for OpenStack services. User and password will be inherited from "group_vars.keystone.user" and "group_vars.keystone.password"
      - name: keystone

  # Glance is an image service
  glance:
    user: glance
    group: glance
    password: secret
    domain: default
    service:
      name: glance
      description: "OpenStack Image"
      type: image
    endpoints:
      # "public:", "internal:", "admin:" can be abbriviated. Parameters in "default:" will be used if they were abbriviated.
      default:
        regions:
          # Endpoints will be created at these regions. Regions specified here must be existed at "group_vars.openstack.region.name"
          - name: RegionOne
            url: "http://dev-controller01:9292"
      #public:
      #  regions:
      #    # Endpoints will be created at these regions. Regions specified here must be existed at "group_vars.openstack.region.name"
      #    - name: RegionOne
      #      url: "http://dev-controller01:9292"
      #internal:
      #  regions:
      #    - name: RegionOne
      #      url: "http://dev-controller01:9292"
      #admin:
      #  regions:
      #    - name: RegionOne
      #      url: "http://dev-controller01:9292"
    dbs:
      # "user:" and "password:" can be abbreviated.
      # group_vars.glance.user and group_vars.glance.password will be used if abbreviate them.
      - name: glance
        user: glance
        password: secret

  placement:
    user: placement
    group: placement
    password: secret
    domain: default
    service:
      name: placement
      description: "Placement API"
      type: placement
    endpoints:
      default:
        regions:
          - name: RegionOne
            url: "http://dev-controller01:8778"
      #public:
      #  regions:
      #    - name: RegionOne
      #      url: "http://dev-controller01:8778"
      #internal:
      #  regions:
      #    - name: RegionOne
      #      url: "http://dev-controller01:8778"
      #admin:
      #  regions:
      #    - name: RegionOne
      #      url: "http://dev-controller01:8778"
    dbs:
      - name: placement
        user: placement
        password: secret
  nova:
    user: nova
    group: nova
    password: secret
    service:
      name: nova
      description: "OpenStack Compute"
      type: compute
    endpoints:
      default:
        regions:
          - name: RegionOne
            url: "http://dev-controller01:8774/v2.1"
    dbs:
      - name: nova_api
      - name: nova
      - name: nova_cell0

  neutron:
    user: neutron
    group: neutron
    password: secret
    service:
      name: neutron
      description: "OpenStack Neutron"
      type: network
    dbs:
      - name: neutron
        user: neutron
        password: secret
    endpoints:
      default:
        regions:
          - name: RegionOne
            url: "http://dev-controller01:9696"

  openstack:
    metadata:
      proxy:
        shared_secret: "p@ssw0rd"
    admin_user_name: admin
    admin_project_name: admin
    admin_password: secret
    package:
      # OpenStack xena on Ubuntu 20.04
      #repository: 'deb http://ubuntu-cloud.archive.canonical.com/ubuntu focal-updates/xena main'
      # OpenStack yoga on Ubuntu 22.04
      repository: 'deb http://ubuntu-cloud.archive.canonical.com/ubuntu focal-updates/yoga main'
      keyserver: keyserver.ubuntu.com
      id: 5EDB1B62EC4926EA
    region:
      # Create default region
      name: RegionOne
    network:
      plugin: "Linux Bridge"
      # plugin: "OVN"
    # Domains belonging in this array will all be created except that "default" domain.
    domains:
      - name: default
        description: "Default domain of OpenStack"
        users:
          # User for testing
          - name: myuser
            password: secret
          # User for glance API
          - name: glance
            password: secret
          - name: placement
            password: secret
          - name: nova
            password: secret
          - name: neutron
            password: secret
          - name: swift
            password: secret
        projects:
          # Service which set "primary: true" is a primary service that never duplicated in this list.
          # Primary service will be a service that is used by default as ...
          #   * [keystone_authtoken] in /etc/glance/glance-api.conf
          - name: service
            description: "Service Project"
            primary: true
            rbac:
              networks:
                - name: private
                  actions: ["access_as_shared"]
          - name: myproject
            description: "Demo Project"
            rbac:
              networks:
                - name: private
                  actions: ["access_as_shared"]
      - name: example
        description: "An example domain"

    roles:
      - name: myrole
        assigners:
          # There are some restrictions
          #   domain: Domain must be existed at "group_vars.openstack.domains[]"
          #   project: Project must be existed in the domain at "group_vars.openstack.domains[].projects[]"
          #   user: User must be existed in the project at "group_vars.openstack.domains[]"

          # Test user
          - user: myuser
            domain: default
            project: myproject
      - name: admin
        assigners:
          # User for glance. Project must be set as parimary service at "group_vars.openstack.domains[].projects[].primary"
          - user: glance
            domain: default
            project: service
          - user: nova
            domain: default
            project: service
          - user: placement
            domain: default
            project: service
          - user: neutron
            domain: default
            project: service

    ssh:
      key_pairs:
        - name: default

    examples:
      images:
        # TODO: This instruction support only 1 image currently.
        - name: "example_cirros"
          url: "http://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img"
      instances:
        - name: "cirros01"
          flavor: "m1.tiny"
          network: "private"
          floating_ip_network: "public"
          # Specify an image which created from.
          image:
            name: "example_cirros"
          # A security groups that will be added in the instance.
          # Security groups declared below must be registerd in the OpenStack.
          security_groups:
            - permit_all
          # A ssh key that will be added in the instance. It must be registered in OpenStack.
          # You can confirm it with a command "openstack keypair list" on the controller node.
          ssh:
            key_pairs:
              - name: default
        - name: "cirros02"
          flavor: "m1.tiny"
          network: "private"
          floating_ip_network: "public"
          image:
            name: "example_cirros"
          security_groups:
            - permit_all
          ssh:
            key_pairs:
              - name: default

      networks:
        - name: public
          # Value of a mtu will be ignored if 'external' is True.
          # Provider network in both development and production environment are able to be set as mtu 1500.
          #mtu: 1500
          external: True
          #
          # "provider.physical.network" and "provider.network.type" will be passed as a value of option
          # "--provider-physical-network" and "--provider-network-type" of a command "openstack network create".
          # These options will connect virtual networks to the physical interface (ex: enp1s0) by refering
          # the configurations in the file "ml2_conf.ini" and "linuxbridge_agent.ini".
          #
          #   * /etc/neutron/plugins/ml2/ml2_conf.ini
          #   [ml2_type_flat]
          #   flat_networks = provider
          # 
          #   * /etc/neutron/plugins/ml2/linuxbridge_agent.ini
          #   [linux_bridge]
          #   physical_interface_mappings = provider:br0
          #
          # "provider.physical.network" is an optional parameter(default: "provider").
          # "provider.network.type" is an optional parameter(default: "flat").
          #
          provider:
            physical:
              network: provider
            network:
              type: flat
        - name: private
          # The size of MTU should be set less than or equals 1450(VXLAN) on physical environment. If you will build an OpenStack environment
          # on KVM instances or any virtual instances that is belonging VXLAN segment, you should specify less than 1450(1400 for example) because packets
          # will be capcelated 2 times on your virtual environment and OpenStack.
          # If you want to use Geneve instead, you should specify MTU less than or equals 1442 on physical environment.
          # The situation is similer to VXLAN when you will build an OpenStack with Geneve on any environment variable.
          # Summaries:
          # * 1450 (VLAN on physical OpenStack environment)
          # * 1400 (VLAN on another virtual network(ex. LVM) OpenStack environment)
          # * 1442 (Geneve on physical OpenStack environment)
          # * 1400 (Geneve on another virtual network(ex. LVM) OpenStack environment)
          mtu: 1442
          provider:
            network:
              # Type should be specified as 'geneve' so far in private network if you chose network driver 'OVN'.
              # Type will be ignored in private network if you chose network driver 'Linux Bridge'.
              type: geneve
              # segment: VLAN ID for VLAN networks or Tunnel ID for GENEVE networks.
              #          If this network is private('external: False' or abbribiated), provider_segment is required.
              segment: 101

      subnets:
        # Value of "network" must be existed in "group_vars.openstack.examples.networks[].name".
        # Option "pool" will be ignored if you set "external: True" in subnet.
        - name: public_subnet
          pool:
            start: 172.31.230.2
            end: 172.31.230.254
          subnet:
            range: 172.31.0.0/16
          network: public
        - name: private_subnet
          pool:
            start: 192.168.255.2
            end: 192.168.255.254
          subnet:
            range: 192.168.255.0/24
          # Key "dns" is optional. DNS servers in the segment will not be set if you do not specify it.
          dns:
            - 172.31.0.1
            - 8.8.8.8
            - 8.8.4.4
          network: private

      routers:
        # NOTE: public_router is not necessary because it already connected in external network.
        - name: private_router
          # Network name that packets will through to the internet.
          # It must be existed in "group_vars.openstack.examples.networks[].name".
          external_gateway: public
          # Subnet that this router will be blonging in.
          # It must be existed in "group_vars.openstack.examples.subnets[].name"
          subnet: private_subnet

      flavors:
        - id: 1
          name: m1.tiny
          ram: 512
          disk: 1
          vcpus: 1
        - id: 2
          name: m1.medium
          ram: 2048
          disk: 8
          vcpus: 1

      security:
        groups:
          - name: permit_all
            description: "Allow all ports"
            rules:
              - value: ["--protocol", "TCP", "--dst-port", "1:65535", "--remote-ip", "0.0.0.0/0"]
              - value: ["--protocol", "ICMP", "--remote-ip", "0.0.0.0/0"]
          - name: limited_access
            description: "Allow base ports"
            rules:
              - value: ["--protocol", "ICMP", "--remote-ip", "0.0.0.0/0"]
              - value: ["--protocol", "TCP", "--dst-port", "22", "--remote-ip", "0.0.0.0/0"]
              - value: ["--protocol", "TCP", "--dst-port", "80", "--remote-ip", "0.0.0.0/0"]
              - value: ["--protocol", "TCP", "--dst-port", "443", "--remote-ip", "0.0.0.0/0"]
